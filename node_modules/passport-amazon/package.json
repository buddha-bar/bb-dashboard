{
  "name": "passport-amazon",
  "version": "0.1.0",
  "description": "Amazon authentication strategy for Passport.",
  "keywords": [
    "passport",
    "amazon",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-amazon.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-amazon/issues"
  },
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-amazon",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-oauth": "0.1.x"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# Passport-Amazon\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [Amazon](http://www.amazon.com/) using the OAuth 2.0 API.\n\nThis module lets you authenticate using Amazon in your Node.js applications.  By\nplugging into Passport, Amazon authentication can be easily and unobtrusively\nintegrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-amazon\n\n## Usage\n\n#### Configure Strategy\n\nThe Amazon authentication strategy authenticates users using an Amazon\naccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a client ID, client secret, and callback URL.\n\nThe client ID and secret are obtained by registering an application at the\n[Login with Amazon Developer Center](http://login.amazon.com/).\n\n    passport.use(new AmazonStrategy({\n        clientID: AMAZON_CLIENT_ID,\n        clientSecret: AMAZON_CLIENT_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/amazon/callback\"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ amazonId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'amazon'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/amazon',\n      passport.authenticate('amazon'));\n\n    app.get('/auth/amazon/callback', \n      passport.authenticate('amazon', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-amazon/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport-amazon.png)](http://travis-ci.org/jaredhanson/passport-amazon)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "_id": "passport-amazon@0.1.0",
  "dist": {
    "shasum": "f8c7112ae0048a6f611604feed36e316070c546d",
    "tarball": "http://registry.npmjs.org/passport-amazon/-/passport-amazon-0.1.0.tgz"
  },
  "_npmVersion": "1.1.62",
  "_npmUser": {
    "name": "jaredhanson",
    "email": "jaredhanson@gmail.com"
  },
  "maintainers": [
    {
      "name": "jaredhanson",
      "email": "jaredhanson@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "f8c7112ae0048a6f611604feed36e316070c546d",
  "_resolved": "https://registry.npmjs.org/passport-amazon/-/passport-amazon-0.1.0.tgz",
  "_from": "passport-amazon@*"
}
